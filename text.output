Terminals unused in grammar

    COMMENT


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 function: function_init
    5         | function_def

    6 type: KW_TYPE_INT
    7     | KW_TYPE_UNSIGNED
    8     | KW_TYPE_BOOL

    9 function_init: type ID PARENT_L parameter_list PARENT_R SEMICOLON

   10 function_def: type ID PARENT_L parameter_list PARENT_R function_body

   11 function_body: BRACKET_L variable_list statement_list BRACKET_R

   12 parameter_list: parameter
   13               | parameter_list COMMA parameter

   14 parameter: %empty
   15          | type ID

   16 variable_list: %empty
   17              | variable_list variable

   18 variable: variable_init
   19         | variable_def

   20 variable_init: type id_list SEMICOLON

   21 variable_def: type ID ASSIGN_OP num_exp SEMICOLON
   22             | type ID ASSIGN_OP bool_full_exp SEMICOLON

   23 id_list: ID
   24        | id_list COMMA ID

   25 statement_list: %empty
   26               | statement_list statement

   27 statement: compound_statement
   28          | assign_statement
   29          | if_statement
   30          | return_statement

   31 compound_statement: BRACKET_L statement_list BRACKET_R

   32 assign_statement: ID ASSIGN_OP num_exp SEMICOLON

   33 num_exp: exp
   34        | num_exp ADD_SUB_OP exp

   35 exp: literal
   36    | ID
   37    | function_call
   38    | PARENT_L num_exp PARENT_R

   39 literal: INT_NUM_VALUE

   40 function_call: ID PARENT_L argument_list PARENT_R

   41 argument_list: argument
   42              | argument_list COMMA argument

   43 argument: %empty
   44         | num_exp
   45         | bool_full_exp

   46 if_statement: if_part
   47             | if_part else_part

   48 if_part: KW_IF PARENT_L bool_full_exp PARENT_R statement

   49 else_part: KW_ELSE statement

   50 bool_exp: BOOL_VALUE
   51         | rel_exp
   52         | NOT_OP PARENT_L bool_full_exp PARENT_R

   53 bool_full_exp: bool_exp
   54              | bool_full_exp bool_op bool_exp

   55 bool_op: AND_OP
   56        | OR_OP
   57        | XOR_OP

   58 rel_exp: num_exp RELATION_OP num_exp

   59 return_statement: KW_RETURN num_exp SEMICOLON
   60                 | KW_RETURN bool_exp SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    COMMENT (258)
    KW_IF (259) 48
    KW_ELSE (260) 49
    KW_RETURN (261) 59 60
    KW_TYPE_INT (262) 6
    KW_TYPE_UNSIGNED (263) 7
    KW_TYPE_BOOL (264) 8
    PARENT_L (265) 9 10 38 40 48 52
    PARENT_R (266) 9 10 38 40 48 52
    BRACKET_L (267) 11 31
    BRACKET_R (268) 11 31
    SEMICOLON (269) 9 20 21 22 32 59 60
    COMMA (270) 13 24 42
    ID (271) 9 10 15 21 22 23 24 32 36 40
    INT_NUM_VALUE (272) 39
    BOOL_VALUE (273) 50
    ADD_SUB_OP (274) 34
    RELATION_OP (275) 58
    ASSIGN_OP (276) 21 22 32
    AND_OP (277) 55
    OR_OP (278) 56
    NOT_OP (279) 52
    XOR_OP (280) 57
    ONLY_IF (281)


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    program (28)
        on left: 1
        on right: 0
    function_list (29)
        on left: 2 3
        on right: 1 3
    function (30)
        on left: 4 5
        on right: 2 3
    type (31)
        on left: 6 7 8
        on right: 9 10 15 20 21 22
    function_init (32)
        on left: 9
        on right: 4
    function_def (33)
        on left: 10
        on right: 5
    function_body (34)
        on left: 11
        on right: 10
    parameter_list (35)
        on left: 12 13
        on right: 9 10 13
    parameter (36)
        on left: 14 15
        on right: 12 13
    variable_list (37)
        on left: 16 17
        on right: 11 17
    variable (38)
        on left: 18 19
        on right: 17
    variable_init (39)
        on left: 20
        on right: 18
    variable_def (40)
        on left: 21 22
        on right: 19
    id_list (41)
        on left: 23 24
        on right: 20 24
    statement_list (42)
        on left: 25 26
        on right: 11 26 31
    statement (43)
        on left: 27 28 29 30
        on right: 26 48 49
    compound_statement (44)
        on left: 31
        on right: 27
    assign_statement (45)
        on left: 32
        on right: 28
    num_exp (46)
        on left: 33 34
        on right: 21 32 34 38 44 58 59
    exp (47)
        on left: 35 36 37 38
        on right: 33 34
    literal (48)
        on left: 39
        on right: 35
    function_call (49)
        on left: 40
        on right: 37
    argument_list (50)
        on left: 41 42
        on right: 40 42
    argument (51)
        on left: 43 44 45
        on right: 41 42
    if_statement (52)
        on left: 46 47
        on right: 29
    if_part (53)
        on left: 48
        on right: 46 47
    else_part (54)
        on left: 49
        on right: 47
    bool_exp (55)
        on left: 50 51 52
        on right: 53 54 60
    bool_full_exp (56)
        on left: 53 54
        on right: 22 45 48 52 54
    bool_op (57)
        on left: 55 56 57
        on right: 54
    rel_exp (58)
        on left: 58
        on right: 51
    return_statement (59)
        on left: 59 60
        on right: 30


State 0

    0 $accept: . program $end

    KW_TYPE_INT       shift, and go to state 1
    KW_TYPE_UNSIGNED  shift, and go to state 2
    KW_TYPE_BOOL      shift, and go to state 3

    program        go to state 4
    function_list  go to state 5
    function       go to state 6
    type           go to state 7
    function_init  go to state 8
    function_def   go to state 9


State 1

    6 type: KW_TYPE_INT .

    $default  reduce using rule 6 (type)


State 2

    7 type: KW_TYPE_UNSIGNED .

    $default  reduce using rule 7 (type)


State 3

    8 type: KW_TYPE_BOOL .

    $default  reduce using rule 8 (type)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 10


State 5

    1 program: function_list .
    3 function_list: function_list . function

    KW_TYPE_INT       shift, and go to state 1
    KW_TYPE_UNSIGNED  shift, and go to state 2
    KW_TYPE_BOOL      shift, and go to state 3

    $default  reduce using rule 1 (program)

    function       go to state 11
    type           go to state 7
    function_init  go to state 8
    function_def   go to state 9


State 6

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 7

    9 function_init: type . ID PARENT_L parameter_list PARENT_R SEMICOLON
   10 function_def: type . ID PARENT_L parameter_list PARENT_R function_body

    ID  shift, and go to state 12


State 8

    4 function: function_init .

    $default  reduce using rule 4 (function)


State 9

    5 function: function_def .

    $default  reduce using rule 5 (function)


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 12

    9 function_init: type ID . PARENT_L parameter_list PARENT_R SEMICOLON
   10 function_def: type ID . PARENT_L parameter_list PARENT_R function_body

    PARENT_L  shift, and go to state 13


State 13

    9 function_init: type ID PARENT_L . parameter_list PARENT_R SEMICOLON
   10 function_def: type ID PARENT_L . parameter_list PARENT_R function_body

    KW_TYPE_INT       shift, and go to state 1
    KW_TYPE_UNSIGNED  shift, and go to state 2
    KW_TYPE_BOOL      shift, and go to state 3

    $default  reduce using rule 14 (parameter)

    type            go to state 14
    parameter_list  go to state 15
    parameter       go to state 16


State 14

   15 parameter: type . ID

    ID  shift, and go to state 17


State 15

    9 function_init: type ID PARENT_L parameter_list . PARENT_R SEMICOLON
   10 function_def: type ID PARENT_L parameter_list . PARENT_R function_body
   13 parameter_list: parameter_list . COMMA parameter

    PARENT_R  shift, and go to state 18
    COMMA     shift, and go to state 19


State 16

   12 parameter_list: parameter .

    $default  reduce using rule 12 (parameter_list)


State 17

   15 parameter: type ID .

    $default  reduce using rule 15 (parameter)


State 18

    9 function_init: type ID PARENT_L parameter_list PARENT_R . SEMICOLON
   10 function_def: type ID PARENT_L parameter_list PARENT_R . function_body

    BRACKET_L  shift, and go to state 20
    SEMICOLON  shift, and go to state 21

    function_body  go to state 22


State 19

   13 parameter_list: parameter_list COMMA . parameter

    KW_TYPE_INT       shift, and go to state 1
    KW_TYPE_UNSIGNED  shift, and go to state 2
    KW_TYPE_BOOL      shift, and go to state 3

    $default  reduce using rule 14 (parameter)

    type       go to state 14
    parameter  go to state 23


State 20

   11 function_body: BRACKET_L . variable_list statement_list BRACKET_R

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 24


State 21

    9 function_init: type ID PARENT_L parameter_list PARENT_R SEMICOLON .

    $default  reduce using rule 9 (function_init)


State 22

   10 function_def: type ID PARENT_L parameter_list PARENT_R function_body .

    $default  reduce using rule 10 (function_def)


State 23

   13 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 13 (parameter_list)


State 24

   11 function_body: BRACKET_L variable_list . statement_list BRACKET_R
   17 variable_list: variable_list . variable

    KW_TYPE_INT       shift, and go to state 1
    KW_TYPE_UNSIGNED  shift, and go to state 2
    KW_TYPE_BOOL      shift, and go to state 3

    $default  reduce using rule 25 (statement_list)

    type            go to state 25
    variable        go to state 26
    variable_init   go to state 27
    variable_def    go to state 28
    statement_list  go to state 29


State 25

   20 variable_init: type . id_list SEMICOLON
   21 variable_def: type . ID ASSIGN_OP num_exp SEMICOLON
   22             | type . ID ASSIGN_OP bool_full_exp SEMICOLON

    ID  shift, and go to state 30

    id_list  go to state 31


State 26

   17 variable_list: variable_list variable .

    $default  reduce using rule 17 (variable_list)


State 27

   18 variable: variable_init .

    $default  reduce using rule 18 (variable)


State 28

   19 variable: variable_def .

    $default  reduce using rule 19 (variable)


State 29

   11 function_body: BRACKET_L variable_list statement_list . BRACKET_R
   26 statement_list: statement_list . statement

    KW_IF      shift, and go to state 32
    KW_RETURN  shift, and go to state 33
    BRACKET_L  shift, and go to state 34
    BRACKET_R  shift, and go to state 35
    ID         shift, and go to state 36

    statement           go to state 37
    compound_statement  go to state 38
    assign_statement    go to state 39
    if_statement        go to state 40
    if_part             go to state 41
    return_statement    go to state 42


State 30

   21 variable_def: type ID . ASSIGN_OP num_exp SEMICOLON
   22             | type ID . ASSIGN_OP bool_full_exp SEMICOLON
   23 id_list: ID .

    ASSIGN_OP  shift, and go to state 43

    $default  reduce using rule 23 (id_list)


State 31

   20 variable_init: type id_list . SEMICOLON
   24 id_list: id_list . COMMA ID

    SEMICOLON  shift, and go to state 44
    COMMA      shift, and go to state 45


State 32

   48 if_part: KW_IF . PARENT_L bool_full_exp PARENT_R statement

    PARENT_L  shift, and go to state 46


State 33

   59 return_statement: KW_RETURN . num_exp SEMICOLON
   60                 | KW_RETURN . bool_exp SEMICOLON

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49
    BOOL_VALUE     shift, and go to state 50
    NOT_OP         shift, and go to state 51

    num_exp        go to state 52
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    bool_exp       go to state 56
    rel_exp        go to state 57


State 34

   31 compound_statement: BRACKET_L . statement_list BRACKET_R

    $default  reduce using rule 25 (statement_list)

    statement_list  go to state 58


State 35

   11 function_body: BRACKET_L variable_list statement_list BRACKET_R .

    $default  reduce using rule 11 (function_body)


State 36

   32 assign_statement: ID . ASSIGN_OP num_exp SEMICOLON

    ASSIGN_OP  shift, and go to state 59


State 37

   26 statement_list: statement_list statement .

    $default  reduce using rule 26 (statement_list)


State 38

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


State 39

   28 statement: assign_statement .

    $default  reduce using rule 28 (statement)


State 40

   29 statement: if_statement .

    $default  reduce using rule 29 (statement)


State 41

   46 if_statement: if_part .
   47             | if_part . else_part

    KW_ELSE  shift, and go to state 60

    $default  reduce using rule 46 (if_statement)

    else_part  go to state 61


State 42

   30 statement: return_statement .

    $default  reduce using rule 30 (statement)


State 43

   21 variable_def: type ID ASSIGN_OP . num_exp SEMICOLON
   22             | type ID ASSIGN_OP . bool_full_exp SEMICOLON

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49
    BOOL_VALUE     shift, and go to state 50
    NOT_OP         shift, and go to state 51

    num_exp        go to state 62
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    bool_exp       go to state 63
    bool_full_exp  go to state 64
    rel_exp        go to state 57


State 44

   20 variable_init: type id_list SEMICOLON .

    $default  reduce using rule 20 (variable_init)


State 45

   24 id_list: id_list COMMA . ID

    ID  shift, and go to state 65


State 46

   48 if_part: KW_IF PARENT_L . bool_full_exp PARENT_R statement

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49
    BOOL_VALUE     shift, and go to state 50
    NOT_OP         shift, and go to state 51

    num_exp        go to state 66
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    bool_exp       go to state 63
    bool_full_exp  go to state 67
    rel_exp        go to state 57


State 47

   38 exp: PARENT_L . num_exp PARENT_R

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49

    num_exp        go to state 68
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55


State 48

   36 exp: ID .
   40 function_call: ID . PARENT_L argument_list PARENT_R

    PARENT_L  shift, and go to state 69

    $default  reduce using rule 36 (exp)


State 49

   39 literal: INT_NUM_VALUE .

    $default  reduce using rule 39 (literal)


State 50

   50 bool_exp: BOOL_VALUE .

    $default  reduce using rule 50 (bool_exp)


State 51

   52 bool_exp: NOT_OP . PARENT_L bool_full_exp PARENT_R

    PARENT_L  shift, and go to state 70


State 52

   34 num_exp: num_exp . ADD_SUB_OP exp
   58 rel_exp: num_exp . RELATION_OP num_exp
   59 return_statement: KW_RETURN num_exp . SEMICOLON

    SEMICOLON    shift, and go to state 71
    ADD_SUB_OP   shift, and go to state 72
    RELATION_OP  shift, and go to state 73


State 53

   33 num_exp: exp .

    $default  reduce using rule 33 (num_exp)


State 54

   35 exp: literal .

    $default  reduce using rule 35 (exp)


State 55

   37 exp: function_call .

    $default  reduce using rule 37 (exp)


State 56

   60 return_statement: KW_RETURN bool_exp . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 57

   51 bool_exp: rel_exp .

    $default  reduce using rule 51 (bool_exp)


State 58

   26 statement_list: statement_list . statement
   31 compound_statement: BRACKET_L statement_list . BRACKET_R

    KW_IF      shift, and go to state 32
    KW_RETURN  shift, and go to state 33
    BRACKET_L  shift, and go to state 34
    BRACKET_R  shift, and go to state 75
    ID         shift, and go to state 36

    statement           go to state 37
    compound_statement  go to state 38
    assign_statement    go to state 39
    if_statement        go to state 40
    if_part             go to state 41
    return_statement    go to state 42


State 59

   32 assign_statement: ID ASSIGN_OP . num_exp SEMICOLON

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49

    num_exp        go to state 76
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55


State 60

   49 else_part: KW_ELSE . statement

    KW_IF      shift, and go to state 32
    KW_RETURN  shift, and go to state 33
    BRACKET_L  shift, and go to state 34
    ID         shift, and go to state 36

    statement           go to state 77
    compound_statement  go to state 38
    assign_statement    go to state 39
    if_statement        go to state 40
    if_part             go to state 41
    return_statement    go to state 42


State 61

   47 if_statement: if_part else_part .

    $default  reduce using rule 47 (if_statement)


State 62

   21 variable_def: type ID ASSIGN_OP num_exp . SEMICOLON
   34 num_exp: num_exp . ADD_SUB_OP exp
   58 rel_exp: num_exp . RELATION_OP num_exp

    SEMICOLON    shift, and go to state 78
    ADD_SUB_OP   shift, and go to state 72
    RELATION_OP  shift, and go to state 73


State 63

   53 bool_full_exp: bool_exp .

    $default  reduce using rule 53 (bool_full_exp)


State 64

   22 variable_def: type ID ASSIGN_OP bool_full_exp . SEMICOLON
   54 bool_full_exp: bool_full_exp . bool_op bool_exp

    SEMICOLON  shift, and go to state 79
    AND_OP     shift, and go to state 80
    OR_OP      shift, and go to state 81
    XOR_OP     shift, and go to state 82

    bool_op  go to state 83


State 65

   24 id_list: id_list COMMA ID .

    $default  reduce using rule 24 (id_list)


State 66

   34 num_exp: num_exp . ADD_SUB_OP exp
   58 rel_exp: num_exp . RELATION_OP num_exp

    ADD_SUB_OP   shift, and go to state 72
    RELATION_OP  shift, and go to state 73


State 67

   48 if_part: KW_IF PARENT_L bool_full_exp . PARENT_R statement
   54 bool_full_exp: bool_full_exp . bool_op bool_exp

    PARENT_R  shift, and go to state 84
    AND_OP    shift, and go to state 80
    OR_OP     shift, and go to state 81
    XOR_OP    shift, and go to state 82

    bool_op  go to state 83


State 68

   34 num_exp: num_exp . ADD_SUB_OP exp
   38 exp: PARENT_L num_exp . PARENT_R

    PARENT_R    shift, and go to state 85
    ADD_SUB_OP  shift, and go to state 72


State 69

   40 function_call: ID PARENT_L . argument_list PARENT_R

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49
    BOOL_VALUE     shift, and go to state 50
    NOT_OP         shift, and go to state 51

    $default  reduce using rule 43 (argument)

    num_exp        go to state 86
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    argument_list  go to state 87
    argument       go to state 88
    bool_exp       go to state 63
    bool_full_exp  go to state 89
    rel_exp        go to state 57


State 70

   52 bool_exp: NOT_OP PARENT_L . bool_full_exp PARENT_R

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49
    BOOL_VALUE     shift, and go to state 50
    NOT_OP         shift, and go to state 51

    num_exp        go to state 66
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    bool_exp       go to state 63
    bool_full_exp  go to state 90
    rel_exp        go to state 57


State 71

   59 return_statement: KW_RETURN num_exp SEMICOLON .

    $default  reduce using rule 59 (return_statement)


State 72

   34 num_exp: num_exp ADD_SUB_OP . exp

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49

    exp            go to state 91
    literal        go to state 54
    function_call  go to state 55


State 73

   58 rel_exp: num_exp RELATION_OP . num_exp

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49

    num_exp        go to state 92
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55


State 74

   60 return_statement: KW_RETURN bool_exp SEMICOLON .

    $default  reduce using rule 60 (return_statement)


State 75

   31 compound_statement: BRACKET_L statement_list BRACKET_R .

    $default  reduce using rule 31 (compound_statement)


State 76

   32 assign_statement: ID ASSIGN_OP num_exp . SEMICOLON
   34 num_exp: num_exp . ADD_SUB_OP exp

    SEMICOLON   shift, and go to state 93
    ADD_SUB_OP  shift, and go to state 72


State 77

   49 else_part: KW_ELSE statement .

    $default  reduce using rule 49 (else_part)


State 78

   21 variable_def: type ID ASSIGN_OP num_exp SEMICOLON .

    $default  reduce using rule 21 (variable_def)


State 79

   22 variable_def: type ID ASSIGN_OP bool_full_exp SEMICOLON .

    $default  reduce using rule 22 (variable_def)


State 80

   55 bool_op: AND_OP .

    $default  reduce using rule 55 (bool_op)


State 81

   56 bool_op: OR_OP .

    $default  reduce using rule 56 (bool_op)


State 82

   57 bool_op: XOR_OP .

    $default  reduce using rule 57 (bool_op)


State 83

   54 bool_full_exp: bool_full_exp bool_op . bool_exp

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49
    BOOL_VALUE     shift, and go to state 50
    NOT_OP         shift, and go to state 51

    num_exp        go to state 66
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    bool_exp       go to state 94
    rel_exp        go to state 57


State 84

   48 if_part: KW_IF PARENT_L bool_full_exp PARENT_R . statement

    KW_IF      shift, and go to state 32
    KW_RETURN  shift, and go to state 33
    BRACKET_L  shift, and go to state 34
    ID         shift, and go to state 36

    statement           go to state 95
    compound_statement  go to state 38
    assign_statement    go to state 39
    if_statement        go to state 40
    if_part             go to state 41
    return_statement    go to state 42


State 85

   38 exp: PARENT_L num_exp PARENT_R .

    $default  reduce using rule 38 (exp)


State 86

   34 num_exp: num_exp . ADD_SUB_OP exp
   44 argument: num_exp .
   58 rel_exp: num_exp . RELATION_OP num_exp

    ADD_SUB_OP   shift, and go to state 72
    RELATION_OP  shift, and go to state 73

    $default  reduce using rule 44 (argument)


State 87

   40 function_call: ID PARENT_L argument_list . PARENT_R
   42 argument_list: argument_list . COMMA argument

    PARENT_R  shift, and go to state 96
    COMMA     shift, and go to state 97


State 88

   41 argument_list: argument .

    $default  reduce using rule 41 (argument_list)


State 89

   45 argument: bool_full_exp .
   54 bool_full_exp: bool_full_exp . bool_op bool_exp

    AND_OP  shift, and go to state 80
    OR_OP   shift, and go to state 81
    XOR_OP  shift, and go to state 82

    $default  reduce using rule 45 (argument)

    bool_op  go to state 83


State 90

   52 bool_exp: NOT_OP PARENT_L bool_full_exp . PARENT_R
   54 bool_full_exp: bool_full_exp . bool_op bool_exp

    PARENT_R  shift, and go to state 98
    AND_OP    shift, and go to state 80
    OR_OP     shift, and go to state 81
    XOR_OP    shift, and go to state 82

    bool_op  go to state 83


State 91

   34 num_exp: num_exp ADD_SUB_OP exp .

    $default  reduce using rule 34 (num_exp)


State 92

   34 num_exp: num_exp . ADD_SUB_OP exp
   58 rel_exp: num_exp RELATION_OP num_exp .

    ADD_SUB_OP  shift, and go to state 72

    $default  reduce using rule 58 (rel_exp)


State 93

   32 assign_statement: ID ASSIGN_OP num_exp SEMICOLON .

    $default  reduce using rule 32 (assign_statement)


State 94

   54 bool_full_exp: bool_full_exp bool_op bool_exp .

    $default  reduce using rule 54 (bool_full_exp)


State 95

   48 if_part: KW_IF PARENT_L bool_full_exp PARENT_R statement .

    $default  reduce using rule 48 (if_part)


State 96

   40 function_call: ID PARENT_L argument_list PARENT_R .

    $default  reduce using rule 40 (function_call)


State 97

   42 argument_list: argument_list COMMA . argument

    PARENT_L       shift, and go to state 47
    ID             shift, and go to state 48
    INT_NUM_VALUE  shift, and go to state 49
    BOOL_VALUE     shift, and go to state 50
    NOT_OP         shift, and go to state 51

    $default  reduce using rule 43 (argument)

    num_exp        go to state 86
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    argument       go to state 99
    bool_exp       go to state 63
    bool_full_exp  go to state 89
    rel_exp        go to state 57


State 98

   52 bool_exp: NOT_OP PARENT_L bool_full_exp PARENT_R .

    $default  reduce using rule 52 (bool_exp)


State 99

   42 argument_list: argument_list COMMA argument .

    $default  reduce using rule 42 (argument_list)
